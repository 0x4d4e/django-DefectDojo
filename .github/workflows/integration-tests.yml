name: Integration tests
# pull requests:
# push:
#      run on every push, which is when something gets merged also
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - dev
      - release/**
      - hotfix/**

env:
  DD_DOCKER_REPO: defectdojo

jobs:
  integration_tests:
    # run tests with docker-compose
    name: integration tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case: [
          "tests/finding_test.py",
          "tests/report_builder_test.py",
          "tests/notes_test.py",
          "tests/regulations_test.py",
          "tests/product_type_test.py",
          "tests/product_test.py",
          "tests/endpoint_test.py",
          "tests/engagement_test.py",
          "tests/environment_test.py",
          "tests/test_test.py",
          "tests/user_test.py",
          "tests/group_test.py",
          "tests/product_group_test.py",
          "tests/product_type_group_test.py",
          "tests/product_member_test.py",
          "tests/product_type_member_test.py",
          "tests/ibm_appscan_test.py",
          "tests/search_test.py",
          "tests/file_test.py",
          "tests/dedupe_test.py",
          "tests/check_various_pages.py",
        ]
      fail-fast: false

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set integration-test mode
        run: ln -s docker-compose.override.integration_tests.yml docker-compose.override.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:master # needed to get the fix for https://github.com/moby/buildkit/issues/2426
          
      - name: Build
        id: docker_build_django
        uses: docker/build-push-action@v2
        env:
          docker-image: django
        with:
          context: .
          push: false
          tags: |
            ${{ env.DD_DOCKER_REPO }}/defectdojo-${{ env.docker-image }}:latest
          file: Dockerfile.${{ env.docker-image }}
          outputs: type=docker,dest=${{ env.docker-image }}_img
          cache-from: type=gha,scope=${{ matrix.docker-image }}
          cache-to: type=gha,mode=max,scope=${{ matrix.docker-image }}

      - name: Build
        id: docker_build_nginx
        uses: docker/build-push-action@v2
        env:
          docker-image: nginx
        with:
          context: .
          push: false
          tags: |
            ${{ env.DD_DOCKER_REPO }}/defectdojo-${{ env.docker-image }}:latest
          file: Dockerfile.${{ env.docker-image }}
          outputs: type=docker,dest=${{ env.docker-image }}_img
          cache-from: type=gha,scope=${{ matrix.docker-image }}
          cache-to: type=gha,mode=max,scope=${{ matrix.docker-image }}

      - name: Build
        id: docker_build_integration-tests
        uses: docker/build-push-action@v2
        env:
          docker-image: integration-tests
        with:
          context: .
          push: false
          tags: |
            ${{ env.DD_DOCKER_REPO }}/defectdojo-${{ env.docker-image }}:latest
          file: Dockerfile.${{ env.docker-image }}
          outputs: type=docker,dest=${{ env.docker-image }}_img
          cache-from: type=gha,scope=${{ matrix.docker-image }}
          cache-to: type=gha,mode=max,scope=${{ matrix.docker-image }}

      # phased startup so we can use the exit code from integrationtest container

      - name: Start Dojo
        # implicity starts uwsgi and rabbitmq
        run: docker-compose up -d mysql nginx celerybeat celeryworker mailhog

      - name: Initialize
        run: docker-compose up --exit-code-from initializer initializer

      - name: Integration tests
        run: docker-compose up --exit-code-from integration-tests integration-tests
        env:
          DD_INTEGRATION_TEST_FILENAME: ${{ matrix.test-case }}

      - name: Logs
        if: always()
        run: docker-compose logs --tail="2500"

      - name: Shutdown
        if: always()
        run: docker-compose down
